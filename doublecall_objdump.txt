
./doublecall:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 c9 2f 00 00 	mov    0x2fc9(%rip),%rax        # 403fd8 <__gmon_start__@Base>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	call   *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	ret

Disassembly of section .plt:

0000000000401020 <puts@plt-0x10>:
  401020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 403ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 403ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401030 <puts@plt>:
  401030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 404000 <puts@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	push   $0x0
  40103b:	e9 e0 ff ff ff       	jmp    401020 <_init+0x20>

0000000000401040 <gets@plt>:
  401040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 404008 <gets@GLIBC_2.2.5>
  401046:	68 01 00 00 00       	push   $0x1
  40104b:	e9 d0 ff ff ff       	jmp    401020 <_init+0x20>

Disassembly of section .text:

0000000000401050 <main>:
  401050:	48 83 ec 08          	sub    $0x8,%rsp
  401054:	48 8d 3d a9 0f 00 00 	lea    0xfa9(%rip),%rdi        # 402004 <_IO_stdin_used+0x4>
  40105b:	e8 d0 ff ff ff       	call   401030 <puts@plt>   # printf("INIT....")
  401060:	e8 0b 01 00 00       	call   401170 <doubleCall>
  401065:	48 8d 3d a5 0f 00 00 	lea    0xfa5(%rip),%rdi        # 402011 <_IO_stdin_used+0x11>
  40106c:	e8 bf ff ff ff       	call   401030 <puts@plt>    # printf("END.....")
  401071:	31 c0                	xor    %eax,%eax
  401073:	48 83 c4 08          	add    $0x8,%rsp
  401077:	c3                   	ret
  401078:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40107f:	00 

0000000000401080 <_start>:
  401080:	f3 0f 1e fa          	endbr64
  401084:	31 ed                	xor    %ebp,%ebp
  401086:	49 89 d1             	mov    %rdx,%r9
  401089:	5e                   	pop    %rsi
  40108a:	48 89 e2             	mov    %rsp,%rdx
  40108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401091:	50                   	push   %rax
  401092:	54                   	push   %rsp
  401093:	45 31 c0             	xor    %r8d,%r8d
  401096:	31 c9                	xor    %ecx,%ecx
  401098:	48 c7 c7 50 10 40 00 	mov    $0x401050,%rdi
  40109f:	ff 15 23 2f 00 00    	call   *0x2f23(%rip)        # 403fc8 <__libc_start_main@GLIBC_2.34>
  4010a5:	f4                   	hlt
  4010a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4010ad:	00 00 00 

00000000004010b0 <_dl_relocate_static_pie>:
  4010b0:	f3 0f 1e fa          	endbr64
  4010b4:	c3                   	ret
  4010b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4010bc:	00 00 00 
  4010bf:	90                   	nop
  4010c0:	b8 20 40 40 00       	mov    $0x404020,%eax
  4010c5:	48 3d 20 40 40 00    	cmp    $0x404020,%rax
  4010cb:	74 13                	je     4010e0 <_dl_relocate_static_pie+0x30>
  4010cd:	48 8b 05 fc 2e 00 00 	mov    0x2efc(%rip),%rax        # 403fd0 <_ITM_deregisterTMCloneTable@Base>
  4010d4:	48 85 c0             	test   %rax,%rax
  4010d7:	74 07                	je     4010e0 <_dl_relocate_static_pie+0x30>
  4010d9:	bf 20 40 40 00       	mov    $0x404020,%edi
  4010de:	ff e0                	jmp    *%rax
  4010e0:	c3                   	ret
  4010e1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4010e8:	00 00 00 00 
  4010ec:	0f 1f 40 00          	nopl   0x0(%rax)
  4010f0:	be 20 40 40 00       	mov    $0x404020,%esi
  4010f5:	48 81 ee 20 40 40 00 	sub    $0x404020,%rsi
  4010fc:	48 89 f0             	mov    %rsi,%rax
  4010ff:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401103:	48 c1 f8 03          	sar    $0x3,%rax
  401107:	48 01 c6             	add    %rax,%rsi
  40110a:	48 d1 fe             	sar    $1,%rsi
  40110d:	74 19                	je     401128 <_dl_relocate_static_pie+0x78>
  40110f:	48 8b 05 ca 2e 00 00 	mov    0x2eca(%rip),%rax        # 403fe0 <_ITM_registerTMCloneTable@Base>
  401116:	48 85 c0             	test   %rax,%rax
  401119:	74 0d                	je     401128 <_dl_relocate_static_pie+0x78>
  40111b:	bf 20 40 40 00       	mov    $0x404020,%edi
  401120:	ff e0                	jmp    *%rax
  401122:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401128:	c3                   	ret
  401129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401130:	f3 0f 1e fa          	endbr64
  401134:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 404020 <__TMC_END__>
  40113b:	75 13                	jne    401150 <_dl_relocate_static_pie+0xa0>
  40113d:	55                   	push   %rbp
  40113e:	48 89 e5             	mov    %rsp,%rbp
  401141:	e8 7a ff ff ff       	call   4010c0 <_dl_relocate_static_pie+0x10>
  401146:	c6 05 d3 2e 00 00 01 	movb   $0x1,0x2ed3(%rip)        # 404020 <__TMC_END__>
  40114d:	5d                   	pop    %rbp
  40114e:	c3                   	ret
  40114f:	90                   	nop
  401150:	c3                   	ret
  401151:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  401158:	00 00 00 00 
  40115c:	0f 1f 40 00          	nopl   0x0(%rax)
  401160:	f3 0f 1e fa          	endbr64
  401164:	eb 8a                	jmp    4010f0 <_dl_relocate_static_pie+0x40>
  401166:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  40116d:	00 00 00 

0000000000401170 <doubleCall>:
  401170:	53                   	push   %rbx
  401171:	48 83 ec 10          	sub    $0x10,%rsp
  401175:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  40117a:	e8 c1 fe ff ff       	call   401040 <gets@plt>
  40117f:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  401184:	e8 a7 fe ff ff       	call   401030 <puts@plt>
  401189:	48 83 c4 10          	add    $0x10,%rsp
  40118d:	5b                   	pop    %rbx
  40118e:	c3                   	ret

Disassembly of section .fini:

0000000000401190 <_fini>:
  401190:	f3 0f 1e fa          	endbr64
  401194:	48 83 ec 08          	sub    $0x8,%rsp
  401198:	48 83 c4 08          	add    $0x8,%rsp
  40119c:	c3                   	ret
